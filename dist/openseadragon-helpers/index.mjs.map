{"version":3,"file":"index.mjs","sources":["../../src/lib/openseadragon-svg.ts","../../src/lib/annotation-helpers.ts","../../src/lib/iiif.ts","../../src/types/open-seadragon.ts","../../src/lib/openseadragon-helpers.ts"],"sourcesContent":["// OpenSeadragon SVG Overlay plugin 0.0.5\n// https://github.com/openseadragon/svg-overlay/issues/34#issuecomment-1147992921\nimport OpenSeadragon from \"openseadragon\";\n\nlet $ = window.OpenSeadragon;\n\nif (!$) {\n  $ = OpenSeadragon;\n  if (!$) {\n    throw new Error(\"OpenSeadragon is missing.\");\n  }\n}\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\n\n// ----------\nif ($.Viewer) {\n  // @ts-expect-error: svgOverlay does not exist on Viewer\n  $.Viewer.prototype.svgOverlay = function () {\n    if (this._svgOverlayInfo) {\n      return this._svgOverlayInfo;\n    }\n\n    this._svgOverlayInfo = new Overlay(this);\n    return this._svgOverlayInfo;\n  };\n}\n// ----------\nconst Overlay = function (viewer) {\n  // eslint-disable-next-line @typescript-eslint/no-this-alias\n  const self = this;\n\n  this._viewer = viewer;\n  this._containerWidth = 0;\n  this._containerHeight = 0;\n\n  this._svg = document.createElementNS(svgNS, \"svg\");\n  this._svg.style.position = \"absolute\";\n  this._svg.style.left = 0;\n  this._svg.style.top = 0;\n  this._svg.style.width = \"100%\";\n  this._svg.style.height = \"100%\";\n  this._viewer.canvas.appendChild(this._svg);\n\n  this._node = document.createElementNS(svgNS, \"g\");\n  this._svg.appendChild(this._node);\n\n  this._viewer.addHandler(\"animation\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"open\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"rotate\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"flip\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"resize\", function () {\n    self.resize();\n  });\n\n  this.resize();\n};\n\n// ----------\nOverlay.prototype = {\n  // ----------\n  node: function () {\n    return this._node;\n  },\n\n  // ----------\n  resize: function () {\n    if (this._containerWidth !== this._viewer.container.clientWidth) {\n      this._containerWidth = this._viewer.container.clientWidth;\n      this._svg.setAttribute(\"width\", this._containerWidth);\n    }\n\n    if (this._containerHeight !== this._viewer.container.clientHeight) {\n      this._containerHeight = this._viewer.container.clientHeight;\n      this._svg.setAttribute(\"height\", this._containerHeight);\n    }\n\n    const p = this._viewer.viewport.pixelFromPoint(new $.Point(0, 0), true);\n    const zoom = this._viewer.viewport.getZoom(true);\n    const rotation = this._viewer.viewport.getRotation();\n    const flipped = this._viewer.viewport.getFlip();\n    // TODO: Expose an accessor for _containerInnerSize in the OSD API so we don't have to use the private variable.\n    const containerSizeX = this._viewer.viewport._containerInnerSize.x;\n    let scaleX = containerSizeX * zoom;\n    const scaleY = scaleX;\n\n    if (flipped) {\n      // Makes the x component of the scale negative to flip the svg\n      scaleX = -scaleX;\n      // Translates svg back into the correct coordinates when the x scale is made negative.\n      p.x = -p.x + containerSizeX;\n    }\n\n    this._node.setAttribute(\n      \"transform\",\n      \"translate(\" +\n        p.x +\n        \",\" +\n        p.y +\n        \") scale(\" +\n        scaleX +\n        \",\" +\n        scaleY +\n        \") rotate(\" +\n        rotation +\n        \")\",\n    );\n  },\n  // ----------\n  onClick: function (node, handler) {\n    // TODO: Fast click for mobile browsers\n\n    new $.MouseTracker({\n      element: node,\n      clickHandler: handler,\n    }).setTracking(true);\n  },\n};\n\nexport const OsdSvgOverlay = (viewer) => {\n  return new Overlay(viewer);\n};\n","import { AnnotationTarget, AnnotationNormalized } from \"@iiif/presentation-3\";\nimport { ParsedAnnotationTarget } from \"src/types/annotations\";\nimport { getLabel } from \"src/hooks/use-iiif\";\nimport { AnnotationResources } from \"src/types/annotations\";\nimport { type ViewerConfigOptions } from \"src/context/viewer-context\";\n\nexport type AnnotationTargetExtended = AnnotationTarget & {\n  selector?: any;\n  source?: string;\n  svg?: string;\n};\n\nconst parseAnnotationTarget = (target: AnnotationTargetExtended | string) => {\n  let parsedTarget: ParsedAnnotationTarget = {\n    id: typeof target === \"string\" ? target : target.source,\n  };\n\n  if (typeof target === \"string\") {\n    if (target.includes(\"#xywh=\")) {\n      const parts = target.split(\"#xywh=\");\n      if (parts && parts[1]) {\n        const [x, y, w, h] = parts[1].split(\",\").map((value) => Number(value));\n        parsedTarget = {\n          id: parts[0],\n          rect: {\n            x,\n            y,\n            w,\n            h,\n          },\n        };\n      }\n    } else if (target.includes(\"#t=\")) {\n      const parts = target.split(\"#t=\");\n      if (parts && parts[1]) {\n        parsedTarget = {\n          id: parts[0],\n          t: parts[1],\n        };\n      }\n    }\n  } else if (typeof target === \"object\") {\n    if (target.selector?.type === \"PointSelector\") {\n      parsedTarget = {\n        id: target.source,\n        point: {\n          x: target.selector.x!,\n          y: target.selector.y!,\n        },\n      };\n    } else if (target.selector?.type === \"SvgSelector\") {\n      parsedTarget = {\n        id: target.source,\n        svg: target.selector.value,\n      };\n    } else if (target.selector?.type === \"FragmentSelector\") {\n      if (\n        target.selector?.value.includes(\"xywh=\") &&\n        target.source.type == \"Canvas\" &&\n        target.source.id\n      ) {\n        const parts = target.selector?.value.split(\"xywh=\");\n        if (parts && parts[1]) {\n          const [x, y, w, h] = parts[1]\n            .split(\",\")\n            .map((value) => Number(value));\n\n          parsedTarget = {\n            id: target.source.id,\n            rect: {\n              x,\n              y,\n              w,\n              h,\n            },\n          };\n        }\n      }\n    }\n  }\n\n  return parsedTarget;\n};\n\nconst parseAnnotationsFromAnnotationResources = (\n  annotationResources: AnnotationResources,\n  vault: any,\n  configOptions: ViewerConfigOptions,\n) => {\n  const annotations: Array<AnnotationNormalized> = [];\n  annotationResources\n    .filter((annotationResource) => {\n      if (annotationResource.label) {\n        const label = getLabel(annotationResource.label);\n        if (Array.isArray(label)) {\n          return !label.some((value) =>\n            configOptions.ignoreAnnotationOverlaysLabels?.includes(value),\n          );\n        }\n      }\n\n      return true;\n    })\n    .forEach((annotationResource) => {\n      annotationResource?.items?.forEach((item) => {\n        const annotation = vault.get(item.id);\n        annotations.push(annotation as unknown as AnnotationNormalized);\n      });\n    });\n\n  return annotations;\n};\n\nexport { parseAnnotationTarget, parseAnnotationsFromAnnotationResources };\n","import {\n  Canvas,\n  CollectionNormalized,\n  IIIFExternalWebResource,\n  ImageService,\n  ManifestNormalized,\n  Service,\n} from \"@iiif/presentation-3\";\nimport { decodeContentState } from \"@iiif/vault-helpers\";\n\nexport const getCanvasResource = (canvas: Canvas) => {\n  if (canvas?.items) {\n    const annotationPage = canvas?.items[0];\n    if (annotationPage?.items) {\n      const resource = annotationPage?.items[0].body as IIIFExternalWebResource;\n      if (resource?.hasOwnProperty(\"id\")) {\n        return resource.id as string;\n      }\n    }\n  }\n};\n\nexport const getInfoResponse = (id: string) =>\n  fetch(`${id.replace(/\\/$/, \"\")}/info.json`)\n    .then((response) => response.json())\n    .then((json) => json)\n    .catch((error: any) => {\n      console.error(\n        `The IIIF tilesource ${id.replace(\n          /\\/$/,\n          \"\",\n        )}/info.json failed to load: ${error}`,\n      );\n    });\n\nexport const getImageServiceURI = (service: Service[] | undefined) => {\n  let imageService: ImageService;\n  let imageServiceURI: string | undefined;\n\n  if (Array.isArray(service)) {\n    imageService = service[0] as ImageService;\n    if (imageService) {\n      let id: string | undefined;\n      \"@id\" in imageService\n        ? (id = imageService[\"@id\"])\n        : (id = imageService.id);\n\n      imageServiceURI = id;\n    }\n  }\n\n  return imageServiceURI;\n};\n\nconst parseIiifContent = (iiifContent: string) => {\n  let resourceId;\n  let active;\n  if (isURL(iiifContent)) {\n    resourceId = iiifContent;\n    active = {};\n  } else {\n    const json = JSON.parse(decodeContentState(iiifContent));\n    switch (json?.type) {\n      // https://iiif.io/api/content-state/1.0/#51-a-region-of-a-canvas-in-a-manifest\n      // https://iiif.io/api/content-state/1.0/#52-start-playing-at-a-point-in-a-recording\n      // https://iiif.io/api/content-state/1.0/#53-multiple-targets-for-a-comparison-view\n      // https://iiif.io/api/content-state/1.0/#54-search-results\n      case \"SpecificResource\":\n      case \"Range\":\n      case \"Annotation\":\n        resourceId = json?.target.partOf[0].id;\n        active = {\n          manifest: resourceId,\n          canvas: json?.target.id,\n        };\n        break;\n      case \"Canvas\":\n        resourceId = json?.partOf[0].id;\n        active = {\n          manifest: resourceId,\n          canvas: json?.id,\n        };\n        break;\n      case \"Manifest\":\n        resourceId = json?.id;\n        active = {\n          collection: json?.partOf[0]?.id,\n          manifest: json?.id,\n        };\n        break;\n      case \"Collection\":\n        resourceId = json?.id;\n        active = {\n          collection: resourceId,\n        };\n        break;\n    }\n  }\n  return { resourceId, active };\n};\n\nexport const decodeContentStateContainerURI = (iiifContent: string) => {\n  const { resourceId, active } = parseIiifContent(iiifContent);\n  return active.collection || active.manifest || resourceId;\n};\n\nexport const getActiveCanvas = (\n  iiifContent: string,\n  manifest: ManifestNormalized,\n) => {\n  const canvases = manifest.items.map((item) => item.id);\n  const { active } = parseIiifContent(iiifContent);\n  const canvas = active.canvas;\n  return canvases.includes(canvas) ? canvas : canvases[0];\n};\n\nexport const getActiveManifest = (\n  iiifContent: string,\n  collection: CollectionNormalized,\n) => {\n  const { active } = parseIiifContent(iiifContent);\n  const manifest = active.manifest;\n  const manifests = collection.items\n    .filter((item) => item.type === \"Manifest\")\n    .map((manifest) => manifest.id);\n  if (manifests.length == 0) return null;\n  return manifests.includes(manifest) ? manifest : manifests[0];\n};\n\nconst isURL = (url: string) => {\n  try {\n    new URL(url);\n  } catch {\n    return false;\n  }\n  return true;\n};\n","export enum OpenSeadragonImageTypes {\n  TiledImage = \"tiledImage\",\n  SimpleImage = \"simpleImage\",\n}\n","import {\n  Annotation,\n  AnnotationNormalized,\n  IIIFExternalWebResource,\n  type CanvasNormalized,\n} from \"@iiif/presentation-3\";\nimport OpenSeadragon from \"openseadragon\";\nimport { type OverlayOptions } from \"src/context/viewer-context\";\nimport { OsdSvgOverlay } from \"src/lib/openseadragon-svg\";\nimport { parseAnnotationTarget } from \"src/lib/annotation-helpers\";\n\nimport { ParsedAnnotationTarget } from \"src/types/annotations\";\nimport { getImageServiceURI } from \"src/lib/iiif\";\nimport { OpenSeadragonImageTypes } from \"src/types/open-seadragon\";\n\nexport function addOverlaysToViewer(\n  viewer: OpenSeadragon.Viewer,\n  canvas: CanvasNormalized,\n  configOptions: OverlayOptions,\n  annotations: Annotation[] | AnnotationNormalized[],\n  overlaySelector: string,\n): void {\n  if (!viewer) return;\n\n  const scale = 1 / canvas.width;\n\n  annotations.forEach((annotation) => {\n    if (!annotation.target) return;\n\n    const parsedAnnotationTarget = parseAnnotationTarget(annotation.target);\n    const { point, rect, svg } = parsedAnnotationTarget;\n\n    if (rect) {\n      const { x, y, w, h } = rect;\n      addRectangularOverlay(\n        viewer,\n        x * scale,\n        y * scale,\n        w * scale,\n        h * scale,\n        configOptions,\n        overlaySelector,\n      );\n    }\n\n    if (point) {\n      const { x, y } = point;\n      const svg = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"${x}\" cy=\"${y}\" r=\"20\" />\n        </svg>\n      `;\n\n      addSvgOverlay(viewer, svg, configOptions, scale, overlaySelector);\n    }\n\n    if (svg) {\n      addSvgOverlay(viewer, svg, configOptions, scale, overlaySelector);\n    }\n  });\n}\n\nexport function createOpenSeadragonRect(\n  canvas: CanvasNormalized,\n  parsedAnnotationTarget: ParsedAnnotationTarget,\n  zoomLevel: number,\n) {\n  let x,\n    y,\n    w = 40,\n    h = 40;\n\n  if (parsedAnnotationTarget.rect) {\n    x = parsedAnnotationTarget.rect.x;\n    y = parsedAnnotationTarget.rect.y;\n    w = parsedAnnotationTarget.rect.w;\n    h = parsedAnnotationTarget.rect.h;\n  }\n\n  if (parsedAnnotationTarget.point) {\n    x = parsedAnnotationTarget.point.x;\n    y = parsedAnnotationTarget.point.y;\n  }\n\n  // TODO: How to handle SVG where no rect or point exists?\n  // @ts-ignore\n  if (parseAnnotationTarget.svg) {\n  }\n\n  const scale = 1 / canvas.width;\n  const rect = new OpenSeadragon.Rect(\n    x * scale - ((w * scale) / 2) * (zoomLevel - 1),\n    y * scale - ((h * scale) / 2) * (zoomLevel - 1),\n    w * scale * zoomLevel,\n    h * scale * zoomLevel,\n  );\n\n  return rect;\n}\n\n/**\n * Add a rectangular overlay to an OpenSeadragon viewer\n */\nfunction addRectangularOverlay(\n  viewer: OpenSeadragon.Viewer,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  configOptions: OverlayOptions,\n  overlaySelector: string,\n): void {\n  const rect = new OpenSeadragon.Rect(x, y, w, h);\n  const div = document.createElement(\"div\");\n\n  if (configOptions) {\n    const { backgroundColor, opacity, borderType, borderColor, borderWidth } =\n      configOptions;\n\n    div.style.backgroundColor = backgroundColor as string;\n    div.style.opacity = opacity as string;\n    div.style.border = `${borderType} ${borderWidth} ${borderColor}`;\n    div.className = overlaySelector;\n  }\n\n  viewer.addOverlay(div, rect);\n}\n\nfunction convertSVGStringToHTML(svgString) {\n  if (!svgString) return null;\n  const template = document.createElement(\"template\");\n  template.innerHTML = svgString.trim();\n  const result = template.content.children;\n\n  return result[0];\n}\n\nexport function addSvgOverlay(\n  viewer: any,\n  svgString: string,\n  configOptions: OverlayOptions,\n  scale: number,\n  overlaySelector: string,\n) {\n  const svgEl = convertSVGStringToHTML(svgString);\n  if (svgEl) {\n    for (const child of svgEl.children) {\n      svg_processChild(viewer, child, configOptions, scale, overlaySelector);\n    }\n  }\n}\n\nfunction svg_processChild(\n  viewer: any,\n  child: ChildNode,\n  configOptions: OverlayOptions,\n  scale: number,\n  overlaySelector: string,\n) {\n  if (child.nodeName === \"#text\") {\n    svg_handleTextNode(child);\n  } else {\n    const newElement = svg_handleElementNode(child, configOptions, scale);\n    const overlay = OsdSvgOverlay(viewer);\n    overlay.node().append(newElement);\n    overlay._svg?.setAttribute(\"class\", overlaySelector);\n\n    // BUG: svg with children elements aren't formated correctly.\n    child.childNodes.forEach((child) => {\n      svg_processChild(viewer, child, configOptions, scale, overlaySelector);\n    });\n  }\n}\n\nexport function svg_handleElementNode(\n  child: any,\n  configOptions: OverlayOptions,\n  scale: number,\n) {\n  let hasStrokeColor = false;\n  let hasStrokeWidth = false;\n  let hasFillColor = false;\n  let hasFillOpacity = false;\n\n  const newElement = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    child.nodeName,\n  );\n\n  if (child.attributes.length > 0) {\n    for (let index = 0; index < child.attributes.length; index++) {\n      const element = child.attributes[index];\n      switch (element.name) {\n        case \"fill\":\n          hasFillColor = true;\n          break;\n        case \"stroke\":\n          hasStrokeColor = true;\n          break;\n        case \"stroke-width\":\n          hasStrokeWidth = true;\n          break;\n        case \"fill-opacity\":\n          hasFillOpacity = true;\n          break;\n      }\n      newElement.setAttribute(element.name, element.textContent);\n    }\n  }\n\n  if (!hasStrokeColor) {\n    newElement.style.stroke = configOptions?.borderColor as string;\n  }\n  if (!hasStrokeWidth) {\n    newElement.style.strokeWidth = configOptions?.borderWidth as string;\n  }\n  if (!hasFillColor) {\n    newElement.style.fill = configOptions?.backgroundColor as string;\n  }\n  if (!hasFillOpacity) {\n    newElement.style.fillOpacity = configOptions?.opacity as string;\n  }\n  newElement.setAttribute(\"transform\", `scale(${scale})`);\n\n  return newElement;\n}\n\nfunction svg_handleTextNode(child: ChildNode) {\n  if (!child.textContent) {\n    return;\n  }\n  if (child.textContent.includes(\"\\n\")) {\n    return;\n  }\n  console.log(\n    \"nodeName:\",\n    child.nodeName,\n    \", textContent:\",\n    child.textContent,\n    \", childNodes.length\",\n    child.childNodes.length,\n  );\n}\n\nexport const parseImageBody = (body: IIIFExternalWebResource) => {\n  const hasImageService =\n    Array.isArray(body?.service) && body?.service.length > 0;\n\n  const uri = hasImageService ? getImageServiceURI(body?.service) : body?.id;\n  const imageType: OpenSeadragonImageTypes = hasImageService\n    ? OpenSeadragonImageTypes.TiledImage\n    : OpenSeadragonImageTypes.SimpleImage;\n\n  return {\n    uri,\n    imageType,\n  };\n};\n\nexport const parseSrc = (src: string, isTiledImage: boolean) => {\n  const imageType = isTiledImage\n    ? OpenSeadragonImageTypes.TiledImage\n    : OpenSeadragonImageTypes.SimpleImage;\n\n  return {\n    uri: src,\n    imageType,\n  };\n};\nexport function removeOverlaysFromViewer(\n  viewer: OpenSeadragon.Viewer,\n  overlaySelector: string,\n) {\n  if (!viewer) return;\n\n  if (!overlaySelector.startsWith(\".\")) {\n    overlaySelector = \".\" + overlaySelector;\n  }\n  const elements = document.querySelectorAll(overlaySelector);\n  if (elements) {\n    elements.forEach((element) => viewer.removeOverlay(element));\n  }\n}\n\nexport function panToTarget(openSeadragonViewer, zoomLevel, target, canvas) {\n  const parsedAnnotationTarget = parseAnnotationTarget(target);\n\n  const { point, rect, svg } = parsedAnnotationTarget;\n\n  if (point || rect || svg) {\n    const rect = createOpenSeadragonRect(\n      canvas,\n      parsedAnnotationTarget,\n      zoomLevel,\n    );\n    openSeadragonViewer?.viewport.fitBounds(rect);\n  }\n}\n"],"names":["$","OpenSeadragon","svgNS","Overlay","viewer","self","p","zoom","rotation","flipped","containerSizeX","scaleX","scaleY","node","handler","OsdSvgOverlay","parseAnnotationTarget","target","parsedTarget","parts","x","y","w","value","_a","_b","_c","_d","_e","getImageServiceURI","service","imageService","imageServiceURI","id","OpenSeadragonImageTypes","addOverlaysToViewer","canvas","configOptions","annotations","overlaySelector","scale","annotation","parsedAnnotationTarget","point","rect","svg","h","addRectangularOverlay","addSvgOverlay","createOpenSeadragonRect","zoomLevel","div","backgroundColor","opacity","borderType","borderColor","borderWidth","convertSVGStringToHTML","svgString","template","svgEl","child","svg_processChild","svg_handleTextNode","newElement","svg_handleElementNode","overlay","hasStrokeColor","hasStrokeWidth","hasFillColor","hasFillOpacity","index","element","parseImageBody","body","hasImageService","uri","imageType","parseSrc","src","isTiledImage","removeOverlaysFromViewer","elements","panToTarget","openSeadragonViewer"],"mappings":"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"}